#! # work in progress - not ready yet /bin/sh
# logzilla starts/stops logzilla service
#
# chkconfig: - 12 88
# description:       starts instance of LogZilla using start-stop-daemon
#

### BEGIN INIT INFO
# Provides: $logzilla
# Required-Start: $syslog
# Required-Stop: $syslog
# Short-Description: LogZilla
# Description: Starts instance of LogZilla using start-stop-daemon
### END INIT INFO

echo "not implemented yet"
exit
set -e

# Check for defaults file and use if so...
if [ -f /etc/default/logzilla ]; then
    . /etc/default/logzilla
else
    echo "/etc/default/logzilla not found, using default settings.";
fi

########################################################################
###
### Please don't edit anything below, edit /etc/default/logzilla instead
###
########################################################################
NAME=logzilla
DESC=LogZilla
LZ_PATH=${LZ_PATH-"/path_to_logzilla"}
SPCONF=${SPCONF-"$LZ_PATH/sphinx/sphinx.conf"}
SPOPTS=${SPOPTS-"--cpustats --iostats"}

SPDATA=${SPDATA-"$LZ_PATH/sphinx/data"}
DAEMON="$LZ_PATH/sphinx/bin/searchd"
PIDFILE=`cat $SPCONF | grep -i pid_file | awk '{print $3}'`
BANNER=${BANNER-true}
ULIMITH=${ULIMITH-25000}
ULIMITS=${ULIMITS-25000}
QUIET=${QUIET-true}
FRESHSTART=${FRESHSTART-false}
DBUSER=${DBUSER-"syslogadmin"}
DBPASS=${DBPASS-"syslogadmin"}
DB=${DB-"syslog"}
DBHOST=${DBHOST-"localhost"}
DBPORT=${DBPORT-3306}
MYSQL="mysql -N -u$DBUSER -p$DBPASS -h$DBHOST -P$DBPORT $DB"
MYSQLADMIN="mysqladmin -u$DBUSER -p$DBPASS -h$DBHOST -P$DBPORT"

ulimit -Hn $ULIMITH
ulimit -Sn $ULIMITS

. /etc/init.d/functions

# Function to see if searchd is already running
run_check() {
    if [ -e $PIDFILE ]; then
        status -p $PIDFILE $DAEMON $NAME > /dev/null && RETVAL=0 || RETVAL="$?"
    else
        RETVAL="2"
    fi
}
# Error checking for MySQL Commands
query() {
    query=$1
    if [ -e $PIDFILE ]; then
        status -p $PIDFILE $DAEMON $NAME > /dev/null && RETVAL=0 || RETVAL="$?"
        $MYSQL -Nse "$query" > /dev/null && RETVAL=0 || RETVAL="$?"
    else
        RETVAL="2"
    fi
}

waitforit(){
    proc="$1"
    pid=`pidof -x $proc`
    secs=1
    if [ $pid ]; then
        log_action_msg "Waiting for $proc[$pid] to exit"
        while pidof -x $proc > /dev/null
        do
            printf "|"
            sleep $secs
            printf "\b"
            printf "/"
            sleep $secs
            printf "\b"
            printf "\\"
            sleep $secs
            printf "\b"
            printf "|"
            sleep $secs
            printf "\b"
            printf "*"
        done
    fi
    return 0
}

do_index() {
    str=""
    indices=$1
    rotate=$2
    for i in $indices
    do
        if [ "z$rotate" != "z" ]; then 
            log_action_msg "Rotating index $i"
        else
            log_action_msg "Creating new index for $i"
        fi
        [ "$QUIET" = true ] || log_action_msg "Running command '$LZ_PATH/sphinx/bin/indexer -c $SPCONF $indices $rotate --sighup-each'"
        str=${str}`$LZ_PATH/sphinx/bin/indexer -c $SPCONF $indices $rotate --sighup-each | tail -n +7`
    done
        [ "$QUIET" = true ] || log_action_msg $str
}
case "$1" in
    start)
        log_action_msg "$DESC[$$]: Starting"
        if [ $FRESHSTART = true ]; then
            log_action_msg "$DESC[$$]: FRESHSTART Detected - Creating a NEW installation of LogZilla"
            # The wget below will check for internet access as it is required for updates
            wget -qO /tmp/lztest "http://www.logzilla.net/pingme"
            if [ "`cat /tmp/lztest | grep -i rawr | wc -l`" -eq 1 ]; then
                apt-get update && apt-get -y upgrade
                echo "y" | $MYSQLADMIN drop $DB
                cd $LZ_PATH && svn update --accept tc
                cd $LZ_PATH/scripts ; echo "y" | perl $LZ_PATH/scripts/install.pl nohup notest
                cat /tmp/lztest
                rm -f /tmp/lztest
                # Reconfigure Timezone and Keyboard 
                log_action_msg "Setting TimeZone..."
                tz=`wget -qO - http://geoip.ubuntu.com/lookup | sed -n -e 's/.*<TimeZone>\(.*\)<\/TimeZone>.*/\1/p'` 
                log_action_msg "Running command timedatectl --no-ask-password set-timezone \"$tz\""
                timedatectl set-timezone "$tz" 
                log_action_msg "Running command timedatectl --adjust-system-clock  set-local-rtc 0"
                timedatectl --adjust-system-clock  set-local-rtc 0
                tz=`timedatectl status| grep Timezone | awk '{print $2}'`
                log_action_msg "TimeZone set to $tz"
                #TODO: Figure out how to allow this to run during bootup - I wasn't able to answer/use the keyboard
                #echo -e "This VM is configured for a US Keyboard"
                #if getyn "Would you like to set a different keyboard layout?[y/n]" ; then
                #dpkg-reconfigure keyboard-configuration
                #fi
                perl -i -pe 's/FRESHSTART=true/FRESHSTART=false/g' /etc/default/logzilla
                service syslog-ng restart
            else
                log_failure_msg "$DESC requires internet access upon first boot. Please configure your network properly then reboot the system"
                exit 1
            fi
        fi
        log_action_msg "Checking index health..."
        run_check
        if [ $RETVAL = 0 ]; then
            log_action_msg "$DESC[$$]: Indexer is currently running with PID $(cat $PIDFILE). Stopping to check indexes, but will restart automatcally..."
            $0 stop
        fi
        idxlist="/tmp/idxtest"
        idxdays="/tmp/idxdays"
        $LZ_PATH/sphinx/bin/searchd -c $SPCONF $SPOPTS | grep "sph: No such file or" | awk '{print $3}' | sed "s/'//g" | sed 's/://g' >$idxlist
        if [ -f $idxlist ]; then
            uniq=`cat $idxlist | tr ' ' '\n' | sort -u | tr '\n' ' '`
            for index in $uniq
            do
                log_action_msg "Creating Missing Index: '$index'"
                $LZ_PATH/sphinx/bin/indexer -c $SPCONF $index | grep "range-query fetch failed" | awk '{print $3}' | sed "s/'//g" | sed 's/://g' >>$idxdays
            done
            if [ -f $idxdays ]; then
                uniq=`cat $idxdays | tr ' ' '\n' | sort -u | tr '\n' ' '`
                for index in $uniq
                do
                    date=`echo $index | awk -F '_' '{print $5}' | sed 's/^\(.\{4\}\)\(.\{2\}\)/\1-\2-/'`
                    if [[ "$date" ]]; then
                        log_action_msg "Recreating Missing SQL Views for $date"
                        $LZ_PATH/scripts/LZTool -v -r makeview -mvdate $date -y 
                    fi
                done
            fi
        fi
        rm -f $idxlist
        rm -f $idxdays
        if [ $BANNER = true ]; then
            log_action_msg "$DESC[$$]: Setting console banner"
            $LZ_PATH/scripts/VM/banner.pl >/dev/null
        fi
        ;;
    reindex)
        log_action_msg "$NAME[$$]: [`date +%F` `date +%T`] - Creating NEW indexes, this may take a while, please be patient..."
        if `pidof -x "LZTool" >dev/null`; then
            waitforit "LZTool"
        fi
        $MYSQL < $LZ_PATH/scripts/sql/sph_counter.sql
        rm -rf $SPDATA/*
        do_index "--all"
        $0 start
        log_action_msg "$NAME[$$]: Completed rebuilding of indexes at `date +%F` `date +%T`"
        ;;
    index)
        log_action_msg "$NAME[$$]: Starting delta indexer at `date +%F` `date +%T`"
        if `pidof -x "LZTool" >dev/null`; then
            waitforit "LZTool"
        fi
        ts_start=`date +"%s"`
        log_action_msg "Rotating old indices"
        # to avoid race conditions first mark all log_arch* indexes for this run
        query "UPDATE sph_counter SET this_run=1 where counter_id>2" 
        if [ $RETVAL != 0 ]; then
            log_failure_msg "$DESC: MySQL is not responding"
        fi
        indexes=''
        query "SELECT value-1 FROM settings WHERE name='SPX_CPU_CORES'"
        if [ $RETVAL = 0 ]; then
            cores=`$MYSQL -Nse "SELECT value-1 FROM settings WHERE name='SPX_CPU_CORES'"`
        else
            log_failure_msg "$DESC: MySQL is not responding"
            exit
        fi
        query "SELECT index_name FROM sph_counter WHERE this_run=1"
        if [ $RETVAL != 0 ]; then
            log_failure_msg "$DESC: MySQL is not responding"
            exit
        fi
        for a in `$MYSQL -Nse "SELECT index_name FROM sph_counter WHERE this_run=1"`
        do 
            for b in `seq 0 $cores` 
            do 
                do_index "idx_"$a"_"$b --rotate &
            done
        done
        wait

        # Now we can run the deltas
        indexes="idx_delta_logs"
        do_index "$indexes" "--rotate"

        # If we rotated views, we need to restart the daemon
        x=`$MYSQL -Nse "SELECT index_name FROM sph_counter WHERE this_run=1"` 
        if [ "z$x" != "z" ]; then 
            log_action_msg "Restarting due to view rotation"
            $0 restart
        fi

        # Cleanup
        $MYSQL -Nse "DELETE FROM sph_counter WHERE counter_id>2 and this_run=1"
        ts_end=`date +"%s"`
        value=`expr $ts_start - $ts_end`

        # Log our metrics
        query "INSERT INTO sph_metrics (name,ts_start,ts_end,value) VALUES ('indexer', $ts_start, $ts_end, $value)"
        if [ $RETVAL != 0 ]; then
            log_failure_msg "$DESC: MySQL is not responding"
            exit
        fi
        log_action_msg "$NAME[$$]: Completed delta index at `date +%F` `date +%T`"
        ;;
    stop)
        run_check
        if [ $RETVAL = 0 ]; then
            log_action_msg "Stopping LogZilla Search Daemon"
            if [ $QUIET = true ]; then
                $LZ_PATH/sphinx/bin/searchd -c $SPCONF --stopwait >/dev/null
            else
                $LZ_PATH/sphinx/bin/searchd -c $SPCONF --stopwait 
                log_action_end_msg $?
            fi
        fi
        ;;
    restart)
        run_check
        if [ $RETVAL = 0 ]; then
            log_action_msg "$DESC[$$]: Restarting Search Daemon on PID $(cat $PIDFILE)"
            kill -HUP $(cat $PIDFILE)
        else
            $0 start
        fi
        ;;
    stats)
        run_check
        if [ $RETVAL = 0 ]; then
                $LZ_PATH/sphinx/bin/searchd -c $SPCONF --status | tail -n +8
            else
                log_action_msg "LogZilla is not running..."
            fi
        ;;
    status)
        status -p $PIDFILE "$DAEMON" "$NAME"
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|status|index|reindex|stats}" >&2
        exit 1
        ;;
esac
