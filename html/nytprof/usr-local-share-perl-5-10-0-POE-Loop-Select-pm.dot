digraph {
graph [overlap=false]
subgraph cluster_POE_Kernel {
	label="POE::Kernel";
	"POE::Kernel::CORE:sselect";
	"POE::Kernel::loop_resume_time_watcher";
	"POE::Kernel::_data_ev_enqueue";
	"POE::Kernel::loop_do_timeslice";
	"POE::Kernel::_test_if_kernel_is_idle";
	"POE::Kernel::loop_initialize";
	"POE::Kernel::_initialize_kernel_session";
	"POE::Kernel::loop_reset_time_watcher";
	"POE::Kernel::_data_ev_dispatch_due";
	"POE::Kernel::run";
	"POE::Kernel::loop_run";
	"POE::Kernel::_data_sig_pipe_build";
	"POE::Kernel::loop_watch_filehandle";
	"POE::Kernel::_data_ses_count";
}
subgraph cluster_Time_HiRes {
	label="Time::HiRes";
	"Time::HiRes::time";
}
"POE::Kernel::_data_ev_enqueue" -> "POE::Kernel::loop_resume_time_watcher";
"POE::Kernel::_initialize_kernel_session" -> "POE::Kernel::loop_initialize";
"POE::Kernel::loop_do_timeslice" -> "POE::Kernel::_data_ev_dispatch_due";
"POE::Kernel::run" -> "POE::Kernel::loop_run";
"POE::Kernel::_data_sig_pipe_build" -> "POE::Kernel::loop_watch_filehandle";
"POE::Kernel::loop_do_timeslice" -> "POE::Kernel::CORE:sselect";
"POE::Kernel::loop_do_timeslice" -> "POE::Kernel::_test_if_kernel_is_idle";
"POE::Kernel::_data_ev_dispatch_due" -> "POE::Kernel::loop_reset_time_watcher";
"POE::Kernel::loop_run" -> "POE::Kernel::_data_ses_count";
"POE::Kernel::loop_run" -> "POE::Kernel::loop_do_timeslice";
"POE::Kernel::loop_do_timeslice" -> "Time::HiRes::time";
}
