#!/bin/bash
#
# unattended.ubuntu
#
# Developed by Reda NOUSHI <reda_noushi@yahoo.com>
# Copyright (c) 2012 LogZilla, LLC
# All rights reserved.
#

# unattended.ubuntu for the moment is _semi_ unattended, needing some manual interventions to complete. 
# 
# TODO:
# . ask and preseed MySQL root password before starting the procedure
# . show the LogZilla license at the beginning and tell install.pl to skip license display
# . use apt-get --force-yes 
#

#set -x
LZ_APACHE=/etc/apache2/sites-enabled/000-default

usage() {
    echo >&2 -e "$0 needs to run as root.\nTry running: \nsudo $0"
    exit 1 
}

warn() {
    echo >&2 "$@"
    echo >&2 "Press Enter to proceed"
    read ALOT
}

set_os() {
    apt-get update
    apt-get dist-upgrade
    apt-get install subversion
    warn "You will be asked to set the MySQL server password, please remember it for later."
    tasksel install lamp-server
    aptitude install build-essential apache2 mysql-server php5 libmysqlclient-dev syslog-ng php5-cli libapache2-mod-php5 php5-mysql php5-gd
}

set_syslogng() {
    sed -i "s|# udp();|udp();\n\ttcp();|g" /etc/syslog-ng/syslog-ng.conf
    service  syslog-ng restart
}

set_perl_deps() {
    aptitude install libdate-calc-perl libfile-tail-perl libdbd-mysql-perl libmime-lite-perl libstring-crc32-perl libmoose-perl 
    aptitude install libchi-perl || PERL_MM_USE_DEFAULT=1 perl -MCPAN -e "install CHI;"
}

set_lz() {
    cd /var/www/logzilla/scripts
    cp dotlzrc .lzrc
    ./install.pl
}

set_apache() {
    a2enmod default
    if [ -e $LZ_APACHE ] ; then
	sed -i "s|/var/www|/var/www/logzilla/html|g" $LZ_APACHE 
# This is now covered by install.pl	
#	sed -i "s|</VirtualHost>||" $LZ_APACHE
#	cat | tee -a $LZ_APACHE <<EOF
#  <DirectoryMatch .*\.svn/.*>
#    Deny From All
#  </DirectoryMatch>
#  <DirectoryMatch .*ioncube.*>
#    Deny From All
#  </DirectoryMatch>
#</VirtualHost>
#EOF
	apache2ctl restart
    else
	warn "you don't have the default Apache2 site file."
	warn "please refer to the Logzilla documentation to configure Apache manually."
    fi

}

set_aliases() {
    cp bash_aliases ~/.bash_aliases_lz
    grep ". ~/.bash_aliases_lz" ~/.bashrc || echo -e "if [ -f ~/.bash_aliases_lz ]; then\n    . ~/.bash_aliases_lz\nfi" >>~/.bashrc
}


set_all() {
    set_os
    set_syslogng
    set_perl_deps
    set_lz
    set_apache
    set_aliases
}


[ `whoami ` = "root" ] || usage
set_all
