#! /bin/sh
#
# Init file for logzilla, copy it to /etc/init.d/logzilla
#
#
#
#
### BEGIN INIT INFO
# Provides:          logzilla
# Required-Start:    $local_fs $network $time $remote_fs
# Required-Stop:     $local_fs $network $time $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starting logzilla
# Description:       Starting LogZilla
### END INIT INFO#
#
# skeleton	example file to build /etc/init.d/ scripts.
#		This file should be used to construct scripts for /etc/init.d.
#
#		Written by Miquel van Smoorenburg <miquels@cistron.nl>.
#		Modified for Debian GNU/Linux
#		by Ian Murdock <imurdock@gnu.ai.mit.edu>.
#
# Version:	@(#)skeleton  1.8  03-Mar-1998  miquels@cistron.nl
# This file was customized by SZALAY Attila <sasa@debian.org>

# stop logzilla before changing its PID file!
PIDFILE="/var/run/logzilla.pid"

LOGZILLA="/path_to_logzilla/scripts/db_insert.pl"
NAME="LogZilla"

PATH=/sbin:/bin:/usr/sbin:/usr/bin
test -f $LOGZILLA || exit 0

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions

case "x$CONSOLE_LOG_LEVEL" in
  x[1-8])
    dmesg -n $CONSOLE_LOG_LEVEL
    ;;
  x)
    ;;
  *)
    log_warning_msg "CONSOLE_LOG_LEVEL is of unaccepted value."
    ;;
esac

if [ -n "$KERNEL_RINGBUF_SIZE" ]
then
  log_warning_msg "KERNEL_RINGBUF_SIZE option is useless and therefore removed."
fi

create_xconsole() {
  if [ ! -e /dev/xconsole ]
  then
    mknod -m 640 /dev/xconsole p
  fi
}
                                
logzilla_start() {
    log_daemon_msg "Starting " "$NAME"
    create_xconsole
    start-stop-daemon --start --quiet --exec /usr/bin/perl \
    --startas $LOGZILLA \
                      --pidfile "$PIDFILE" -- -b -p "$PIDFILE" 
    RET="$?"
    log_end_msg $RET
    return $RET
}

logzilla_stop() {
    log_daemon_msg "Stopping " "$NAME"
    start-stop-daemon --stop --signal 15 --pidfile $PIDFILE \
      --exec /usr/bin/perl --startas $LOGZILLA
    RET="$?"
    log_end_msg $RET
    rm -f "$PIDFILE"
    return $RET
}

case "$1" in
  start)
    logzilla_start || exit 1
    ;;
  stop)
    logzilla_stop || exit 1
    ;;
  restart)
    logzilla_stop
    logzilla_start || exit 1
    ;;
  *)
    echo "Usage: /etc/init.d/logzilla {start|stop|restart}" >&2
    exit 1
    ;;
esac

exit 0

