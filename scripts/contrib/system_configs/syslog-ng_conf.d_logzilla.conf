#<lzconfig> BEGIN LogZilla settings
# LogZilla "standard" config - this may or may not work well for your environment
# It is advisable that you learn what is best for your server.
# There's a great web gui available at http://mitzkia.github.com/syslog-ng-ose-configurator/#/howtouse
# Install Date: Fri Oct 25 19:47:47 2013

# Global Options
options {
    chain_hostnames(no);
    keep_hostname(yes);
    #threaded(yes); # enable if using Syslog-NG 3.3.x
    #use_fqdn(no); # This should be set to no in high scale environments
    #use_dns(no); # This should be set to no in high scale environments
};

# Capture the program name for SNARE events
rewrite r_snare { 
	subst("MSWinEventLog.+(Security|Application|System).+", "MSWin_$1", value("PROGRAM") flags(global)
	); 
};

# Snare sends TAB delimited messages, we need pipes...
rewrite r_pipes { 
	subst("\t", "|", value("MESSAGE") 
	flags(global)
	); 
};

# Grab Cisco Mnemonics and write program name
filter f_rewrite_cisco_program { match('^(%[A-Z]+\-\d\-[0-9A-Z]+): ([^\n]+)' value("MSGONLY") type("pcre") flags("store-matches" "nobackref")); };
filter f_rewrite_cisco_program_2 { match('^[\*\.]?(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s+\d{1,2}\s\d{1,2}:\d{1,2}:\d{1,2}(?:\.\d+)?(?: [A-Z]{3})?: (%[^:]+): ([^\n]+)' value("MSGONLY") type("pcre") flags("store-matches" "nobackref")); };
filter f_rewrite_cisco_program_3 { match('^\d+[ywdh]\d+[ywdh]: (%[^:]+): ([^\n]+)' value("MSGONLY") type("pcre") flags("store-matches" "nobackref")); };
filter f_rewrite_cisco_program_4 { match('^\d{6}: [\*\.]?(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s+\d{1,2}\s\d{1,2}:\d{1,2}:\d{1,2}(?:\.\d+)?(?: [A-Z]{3})?: (%[^:]+): ([^\n]+)' value("MSGONLY") type("pcre") flags("store-matches" "nobackref")); };

rewrite r_cisco_program {
        set("Cisco_Syslog", value("PROGRAM") condition(filter(f_rewrite_cisco_program) or filter(f_rewrite_cisco_program_2) or filter(f_rewrite_cisco_program_3) or filter(f_rewrite_cisco_program_4)));
        set("$1: $2", value("MESSAGE") condition(filter(f_rewrite_cisco_program) or filter(f_rewrite_cisco_program_2) or filter(f_rewrite_cisco_program_3) or filter(f_rewrite_cisco_program_4)));
};

# Some guesses to detect VMWare, feel free to add your hostname to the HOST matches below
filter f_vmware {  
match('vmware|vim\.' value("MSGONLY"))
    or match("^Vpxa:" value("MSGONLY")) 
    or match("^Hostd:" value("MSGONLY"))  
    or match("^Rhttpproxt:" value("MSGONLY")) 
    or match("^Fdm:" value("MSGONLY")) 
    or match("^hostd-probe:" value("MSGONLY"))  
    or match("^vmkernel:" value("MSGONLY"))
    or match("[Vv][Mm][Ww][Aa][Rr][Ee].*" value("HOST"))
    or match("[Vv][Cc][Ee][Nn][Tt][Ee][Rr].*" value("HOST"))
}; 
rewrite r_vmware {
    set("VMWare", value("PROGRAM") condition(filter(f_vmware)));
};
    
source s_logzilla {
    tcp();
    udp();
    # Use no-multi-line so that java events get read properly
    syslog(flags(no-multi-line));
};  

destination d_logzilla {
    program(
            "/path_to_logzilla/scripts/logzilla"
            log_fifo_size(1000)
            flush_lines(100)
            flush_timeout(1)
            template("$R_YEAR-$R_MONTH-$R_DAY $R_HOUR:$R_MIN:$R_SEC\t$HOST\t$PRI\t$PROGRAM\t$MSGONLY\n")
           );
};

destination df_logzilla {
    file("/path_to_logs/DEBUG.log"
            template("$R_YEAR-$R_MONTH-$R_DAY $R_HOUR:$R_MIN:$R_SEC\t$HOST\t$PRI\t$PROGRAM\t$MSGONLY\n")
        ); 
};

log {
    source(s_logzilla);
    rewrite(r_snare);
    rewrite(r_pipes);
    rewrite(r_cisco_program);
    destination(d_logzilla);
    # Uncomment below and restart syslog-ng for debugging
    # destination(df_logzilla);
    flags(flow-control);
};
#</lzconfig> END LogZilla settings

